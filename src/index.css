:root {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  /* No selection of text */
  -webkit-touch-callout: none;
  /* iOS Safari */
  -webkit-user-select: none;
  /* Safari */
  -khtml-user-select: none;
  /* Konqueror HTML */
  -moz-user-select: none;
  /* Old versions of Firefox */
  -ms-user-select: none;
  /* Internet Explorer/Edge */
  user-select: none;
  /* Non-prefixed version, currently supported by Chrome, Edge, Opera and Firefox */
}

html,
body {
  overflow-x: hidden;
}

body {
  margin: 0;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif;
}

body.dark,
.dark [class*=modal],
.dark select {
  background-color: black !important;
}

.dark *:not(a, .color-react, .btn-bs) {
  color: white;
  border-color: white;
}

.dark label {
  border-color: white !important;
}

.dark .modal,
.dark .modal-dialog {
  background-color: transparent !important;
}

.dark #ttt-logo,
.dark .cell-strike,
.dark .btn-close,
.dark .bg-dark,
.dark .cell-icon,
.dark .cell-strike {
  filter: invert();
}

.btn:focus {
  outline: none;
  box-shadow: none;
}

.color-react {
  color: rgb(97, 218, 251);
}

.color-red {
  filter: invert(15%) sepia(88%) saturate(6187%) hue-rotate(359deg) brightness(92%) contrast(119%) !important;
}

.color-yellow {
  filter: invert(96%) sepia(68%) saturate(1962%) hue-rotate(359deg) brightness(109%) contrast(102%) !important;
}

.color-green {
  filter: invert(55%) sepia(48%) saturate(4149%) hue-rotate(88deg) brightness(122%) contrast(124%) !important;
}

.color-cyan {
  filter: invert(86%) sepia(100%) saturate(4818%) hue-rotate(106deg) brightness(104%) contrast(108%) !important;
}

.color-blue {
  filter: invert(11%) sepia(100%) saturate(4776%) hue-rotate(244deg) brightness(96%) contrast(153%) !important;
}

.color-magenta {
  filter: invert(41%) sepia(82%) saturate(7488%) hue-rotate(293deg) brightness(110%) contrast(135%) !important;
}

.logo-size {
  height: calc(2rem + 1.5vw);
  margin: 0px 5px 5px 5px;
}

.board {
  max-width: 25em;
}

.cell {
  border-color: black;
}

.cell-icon {
  width: 80%;
}

.cell-strike {
  background-color: black;
  min-width: 4%;
  position: absolute;
  height: 150%;
  left: calc(50% - 2%);
  top: calc(50% / -2);
}

.cell-strike-hor {
  transform: rotate(90deg);
}

.cell-strike-ccw {
  transform: rotate(-45deg);
}

.cell-strike-cw {
  transform: rotate(45deg);
}

.toggle {
  width: 4em !important;
  height: 2em !important;
  border-color: var(--bs-secondary);
}

.toggle:checked {
  background-color: var(--bs-secondary);
  border-color: var(--bs-secondary);
}

.toggle:focus {
  box-shadow: 0 0 0 .25rem rgba(108, 117, 125, .5);
  border-color: var(--bs-secondary);
  filter: grayscale();
}

.dark .toggle:checked {
  background-color: black;
  border-color: white;
  filter: invert(100%);
}

/* Animations */

@keyframes CellZoomIn {
  0% {
    width: 0%;
  }

  50% {
    width: 100%;
  }

  100% {
    width: 80%;
  }
}

@keyframes CellZoomOut {
  0% {
    width: 80%;
  }

  50% {
    width: 100%;
  }

  100% {
    width: 0%;
  }
}

@keyframes CellBlink {
  50% {
    opacity: 0;
  }
}

@keyframes BorderBlink {
  50% {
    border-color: transparent;
  }
}

.cell-blink {
  animation-name: CellBlink;
  animation-duration: 0.25s;
  animation-iteration-count: 3;
  animation-timing-function: steps(1);
}

.border-blink {
  animation-name: BorderBlink;
  animation-duration: 0.25s;
  animation-iteration-count: 3;
  animation-timing-function: steps(1);
}

.zoom-in {
  animation-name: CellZoomIn;
  animation-duration: 0.25s;
  animation-fill-mode: both;
}

.zoom-out {
  animation-name: CellZoomOut;
  animation-duration: 0.25s;
  animation-fill-mode: both;
}

.btn-anim>svg {
  transition-property: scale, transform;
  transition-duration: 0.25s, 0.5s;
}

.btn-anim:active>svg {
  scale: 0.5;
}

.btn-anim.btn-anim-ml:hover>svg {
  transform: translateX(-10px);
}

.btn-anim.btn-anim-mr:hover>svg {
  transform: translateX(10px);
}

.btn-anim.btn-anim-sx:hover>svg {
  transform: scale(1.5, 1);
}

.btn-anim.btn-anim-sy:hover>svg {
  transform: scale(1, 1.5);
}

.btn-anim.btn-anim-rot:hover>svg {
  transform: rotate(180deg);
}